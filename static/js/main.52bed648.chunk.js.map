{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundry.jsx","containers/App.jsx","registerServiceWorker.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","robots","style","height","width","overflowY","paddingRight","map","user","components_Card","key","SearchBox","onSearch","type","placeholder","onFocus","event","target","onBlur","onChange","Scroll","props","overflow","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","handleSearch","searchField","value","uuid","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.52bed648.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n\treturn (\r\n\t\t<div className=\"bg-light-green-custom dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"avatar\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\theight: \"55vh\",\r\n\t\t\t\twidth: \"110vw\",\r\n\t\t\t\toverflowY: \"scroll\",\r\n\t\t\t\tpaddingRight: \"10vw\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{robots.map(user => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\tid={user.id}\r\n\t\t\t\t\t\tname={user.name}\r\n\t\t\t\t\t\temail={user.email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ onSearch }) => {\r\n\tconst placeholder = \"Search Robots\";\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"pa2 \">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tonFocus={event => (event.target.placeholder = \"\")}\r\n\t\t\t\tonBlur={event => (event.target.placeholder = placeholder)}\r\n\t\t\t\tonChange={onSearch}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = props => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\toverflow: \"hidden\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({hasError: true});\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <h1>Our Robots Are Down. We Are Trying To Fix Them...</h1>\r\n    }\r\n\r\n    return (this.props.children);\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: \"\",\r\n\t\t\tuuid: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({ robots: users }));\r\n\t}\r\n\r\n\thandleSearch = event => {\r\n\t\tthis.setState({ searchField: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { robots, searchField } = this.state;\r\n\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name\r\n\t\t\t\t.toLocaleLowerCase()\r\n\t\t\t\t.includes(searchField.toLocaleLowerCase());\r\n\t\t});\r\n\r\n\t\tif (robots.length === 0) {\r\n\t\t\treturn <h1 className=\"tc roboTitle\">Loading...</h1>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t<h1 className=\"roboTitle\">RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox onSearch={this.handleSearch} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background. To learn more about the\r\n// benefits of this model, read https://goo.gl/KwvDNy. This link also includes\r\n// instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin from\r\n      // what our page is served on. This might happen if a CDN is used to serve\r\n      // assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or\r\n        // not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the service\r\n        // worker/PWA documentation.\r\n        navigator\r\n          .serviceWorker\r\n          .ready\r\n          .then(() => {\r\n            console.log('This web app is being served cache-first by a service worker. To learn more, vis' +\r\n              'it https://goo.gl/SC7cgQ');\r\n          });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and the fresh content\r\n              // will have been added to the cache. It's the perfect time to display a \"New\r\n              // content is available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached. It's the perfect time to\r\n              // display a \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator\r\n        .serviceWorker\r\n        .ready\r\n        .then(registration => {\r\n          registration\r\n            .unregister()\r\n            .then(() => {\r\n              window\r\n                .location\r\n                .reload();\r\n            });\r\n        });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl);\r\n    }\r\n  }).catch(() => {\r\n    console.log('No internet connection found. App is running in offline mode.');\r\n  });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'tachyons';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <App/>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}